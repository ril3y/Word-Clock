MPASM  5.34                      D18F4520.ASM   5-22-2010  11:42:38         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;*****************************************************************************
                      00002 ; PIC18F2420/2520/4420/4520 - device configuration and initialization
                      00003 ;*****************************************************************************
                      00004 ;
                      00005 ;    Filename:          d18f4520.asm
                      00006 ;    Function:          Device config / init / start / stop routines
                      00007 ;    Author, Company:   Alden Hart, Luke's Lights
                      00008 ;    Chip Support:      Supports PIC18F2420 / 2520 / 4420 / 4520
                      00009 ;    Revision:          091013
                      00010 ;
                      00011 ; This file provides initialization for the modules in the supported devices (above)
                      00012 ; Most modules are disabled during reset, except AD, and ports are all input.
                      00013 ;
                      00014 ; Since it may be more conveneient to init ports and timers in their home routines
                      00015 ; switches are provided to disable these init calls.
                      00016 
                      00017 ;----- Include files and other setup------
                      00018 
                      00019 #include <global.inc>                   ; 1: global defines - must be first
                      00001 ;*****************************************************************************
                      00002 ; global.inc - global header file for any application or chip family
                      00003 ;*****************************************************************************
                      00004 ;
                      00005 ;    Filename:          global.inc
                      00006 ;    Function:          define files, global equates and macros
                      00007 ;    Author, Company:   Alden Hart, Luke's Lights
                      00008 ;    Date/Time/Rev:     091015
                      00009 ;
                      00010 ; This file must be the first include file in each .asm file
                      00011 ; Set this file up first
                      00012 
                      00013 ;----- Include file definitions ------
                      00014 ;
                      00015 ; All ASM files must have this set of includes in this order:
                      00016 ;#include <global.inc>                  ; 1: global defines - must be first
                      00017 ;#include <DEV_INCLUDE_FILE>            ; 2: Our device include file
                      00018 ;#include <LED_INCLUDE_FILE>            ; 3: LED subsystem include file
                      00019 ;#include <APP_INCLUDE_FILE>            ; 4: Application include file
                      00020 ;
                      00021 ; Which are set up here:
                      00022 #define DEV_INCLUDE_FILE d18f4520.inc   ; device header file
                      00023 #define LED_INCLUDE_FILE led.inc        ; led sub-system header file
                      00024 #define APP_INCLUDE_FILE wClock.inc     ; application header file
                      00025 
                      00026 ;----- Fundamental definitions ------
                      00027 
  00000001            00028 TRUE            equ     1       ; must equal 1 - do not re-assign
  00000000            00029 FALSE           equ     0       ; must equal 0 - do not re-assign
  00000001            00030 ON              equ     1
  00000000            00031 OFF             equ     0
                      00032 
                      00033 ;---- Global error return codes ----
                      00034 
MPASM  5.34                      D18F4520.ASM   5-22-2010  11:42:38         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000000            00035 ERR_NO_ERROR            equ     .00     ; not actually an error, probably an end
  00000001            00036 ERR_BAD_COMMAND         equ     .01     ; invalid command value
  00000002            00037 ERR_BAD_CHANNEL         equ     .02     ; invalid channel number or encoded channel
  00000003            00038 ERR_BAD_ARGNUM          equ     .03     ; invalid argument number
  00000004            00039 ERR_BAD_OPCODE          equ     .04     ; invalid argument opcode
  00000005            00040 ERR_CMD_LOADER_FAILED   equ     .05     ; command loader failed in cmd module
  00000006            00041 ERR_GET_COMMAND_FAILED  equ     .06     ; get_command failed in presets module
  00000007            00042 ERR_GET_NEXT_CMD_FAILED equ     .07     ; get_next failed in presets module
                      00043 
                      00044 ;---- Handy global macros ----
                      00045 
                      00046 ;---- Handy macro to set a 16 bit pointer to a literal address
                      00047 
                      00048 setptr  macro   ADDRESS, ptr_hi, ptr_lo
                      00049         movlw   HIGH ADDRESS
                      00050         movwf   ptr_hi
                      00051         movlw   LOW ADDRESS
                      00052         movwf   ptr_lo
                      00053         endm
                      00054 
                      00055 ;---- Handy macro to set table pointer to an address
                      00056 
                      00057 tbladdr macro   ADDRESS
                      00058         movlw   HIGH ADDRESS
                      00059         movwf   TBLPTRH
                      00060         movlw   LOW ADDRESS
                      00061         movwf   TBLPTRL
                      00062         endm
                      00063 
                      00064 ;---- Handy macro to set table pointer to an address indexed by a second value
                      00065 
                      00066 tblindx macro   ADDRESS, index  ; index is a mem variable name, not a literal
                      00067         movlw   high ADDRESS
                      00068         movwf   TBLPTRH
                      00069         movlw   low ADDRESS
                      00070         movwf   TBLPTRL
                      00071         rlncf   index,W                 ; multiply index value by 2
                      00072         addwf   TBLPTRL
                      00073         movlw   0                       ; propagate carry (if any)
                      00074         addwfc  TBLPTRH
                      00075         endm
                      00076 
                      00077 ;---- Handy macro to read a 16 bitvalue from a table into a pointer
                      00078 ;     Usually follows tbladdr or tblindx
                      00079 ;     Leaves table pointer to next location
                      00080 
                      00081 tblread macro   ptr_hi, ptr_lo          ; hi and lo registers for table read
                      00082         tblrd*+
                      00083         movff   TABLAT,ptr_lo           ; DATA statements are lo/hi endian
                      00084         tblrd*+
                      00085         movff   TABLAT,ptr_hi
                      00086         endm
                      00087 
MPASM  5.34                      D18F4520.ASM   5-22-2010  11:42:38         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00088 ;---- SWITCH statement macro (jump through a vector table) ----
                      00089 ; OK, it's not REALLY a switch/case statement - ot works differently than C
                      00090 ;
                      00091 ; Calling convention is:
                      00092 ;
                      00093 ;       rlncf   cmd_command,W           ; load table index x2 into W
                      00094 ;       switch                          ; call the macro
                      00095 ;       data    CL_ERROR                ; table index 0
                      00096 ;       data    CL_LOAD_SET_HSB         ; table index 1 (etc).
                      00097 ;       data    CL_LOAD_SET_RGB
                      00098 ;       data    CL_LOAD_PATCH
                      00099 ;       data    CL_LOAD_FADE
                      00100 ;       data    CL_LOAD_WATCH           ; max index. not range checked.
                      00101 ;
                      00102 ; You must also include the following lines in any file but the main:
                      00103 ;
                      00104 ;       extern  tblptrh_temp
                      00105 ;       extern  tblptrl_temp
                      00106 ;
                      00107 ; CONSTRAINTS:
                      00108 ;       W must contain the table index multipled by 2 prior to invoking switch
                      00109 ;       The macro must be followed by the actual jump table as illustrated above.
                      00110 ;       The first element in the jump table must be index zero (0)
                      00111 ;       Tables are limited to 128 entries or you must change case for 16-bit math
                      00112 ;       The macro does not check that the index is in range for the table...
                      00113 ;       ...presumably this is validated by an upstream data validation checker.
                      00114 ;
                      00115 ; This macro is not nearly as code efficient as a computed BRA (below), but  
                      00116 ; doesn't break if it crosses on page boundaries:
                      00117 ;
                      00118 ;       movlw   HIGH jump
                      00119 ;       movwf   PCLATH
                      00120 ;       rlncf   index,W                 ; get command code x2 into W...
                      00121 ;       addlw   LOW jump                ;...this only works with BRAs 
                      00122 ;       movwf   PCL                     ;...GOTOs require x4
                      00123 ;jump   bra     CL_ERROR
                      00124 ;       bra     CL_LOAD_SET_HSB
                      00125 ;       bra     CL_LOAD_SET_RGB
                      00126 ;       bra     CL_LOAD_PATCH
                      00127 ;       bra     CL_LOAD_FADE
                      00128 ;       bra     CL_LOAD_WATCH
                      00129 
                      00130 switch  macro
                      00131         local   table_base
                      00132         movff   TBLPTRH,temp_tblptrh    ; save current table pointer
                      00133         movff   TBLPTRL,temp_tblptrl
                      00134 
                      00135         addlw   LOW table_base          ; add index (W) to table base
                      00136         movwf   TBLPTRL                 ; set low pointer
                      00137         movlw   HIGH table_base
                      00138         movwf   TBLPTRH
                      00139         btfsc   STATUS,C                ; propagate the carry from the add
                      00140         incf    TBLPTRH,F
MPASM  5.34                      D18F4520.ASM   5-22-2010  11:42:38         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00141 
                      00142         tblrd*+                         ; read and save vector address lo byte
                      00143         movf    TABLAT,W
                      00144         tblrd*                          ; read and save vector address hi byte
                      00145         movff   TABLAT,PCLATH
                      00146 
                      00147         movff   temp_tblptrh,TBLPTRH    ; restore calling table pointer
                      00148         movff   temp_tblptrl,TBLPTRL
                      00149 
                      00150         movwf   PCL                     ; jump to case routine
                      00151 table_base
                      00152         endm
                      00153 
                      00020 #include <DEV_INCLUDE_FILE>             ; 2: Our device include file
                      00001 ;*****************************************************************************
                      00002 ; d18f2520 - device header file
                      00003 ;*****************************************************************************
                      00004 ;
                      00005 ;    Filename:          d18f4520.inc
                      00006 ;    Author, Company:   Alden Hart, Luke's Lights
                      00007 ;    Date/Time/Rev:     091015
                      00008 ;
                      00009 ; Choses device and sets basic parameters related to the device and it's 
                      00010 ; use in this application
                      00011 ; 
                      00012 
                      00013 ;----- Common, device-specific definitions -----
                      00014 
  00000018            00015 DEV_FAMILY      equ     18              ; for F18 series
  00000024            00016 FOSC            equ     .36             ; MHz (approximate and must be tested)
                      00017 
                      00018 ; Used to qualify instructions:
  00000000            00019 A       equ     0                       ; Access Bank
  00000001            00020 B       equ     1                       ; BSR banked
                      00021 
                      00022 ;------ Select Device -----
                      00023 ; pick only one:
                      00024 ;DEVTYPE  equ   2420            ; 18F2420
                      00025 ;DEVTYPE  equ   2520            ; 18F2520
  00004420            00026 DEVTYPE  equ    4420            ; 18F4420
                      00027 ;DEVTYPE  equ   4520            ; 18F4520
                      00028 
                      00029 ; PIC18F2420
                      00030     if DEVTYPE == 2420
                      00031         nolist
                      00032 #include <p18f2420.inc>
                      00033         list
                      00034 ;       list    p=18f2420               ; not needed - processor is set by MPLAB
                      00035 MAXRAM  equ     0x02FF
                      00036     endif
                      00037 
                      00038 ;PIC18F2520
                      00039     if DEVTYPE == 2520
MPASM  5.34                      D18F4520.ASM   5-22-2010  11:42:38         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00040         nolist
                      00041 #include <p18f2520.inc>
                      00042         list
                      00043 ;       list    p=18f2520               ; not needed - processor is set by MPLAB
                      00044 MAXRAM  equ     0x05FF
                      00045     endif
                      00046 
                      00047 ;PIC18F4420
                      00048     if DEVTYPE == 4420
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ;  MPASM PIC18F4420 processor include
                      00005 ; 
                      00006 ;  (c) Copyright 1999-2007 Microchip Technology, All rights reserved
                      00007 ;==========================================================================
                      00008 
                      01293         LIST
                      00051         list
                      00052 ;       list    p=18f4420               ; not needed - processor is set by MPLAB
  000002FF            00053 MAXRAM  equ     0x02FF
                      00054     endif
                      00055 
                      00056 ;PIC18F4520
                      00057     if DEVTYPE == 4520
                      00058         nolist
                      00059 #include <p18f4520.inc>
                      00060         list
                      00061 ;       list    p=18f4520               ; not needed - processor is set by MPLAB
                      00062 MAXRAM  equ     0x05FF
                      00063     endif
                      00021 #include <LED_INCLUDE_FILE>             ; 3: LED subsystem include file
                      00001 ;*****************************************************************************
                      00002 ; PIC18F family - LED subsystem include file
                      00003 ;*****************************************************************************
                      00004 ;*****************************************************************************
                      00005 ;
                      00006 ;    Filename:          led.inc
                      00007 ;    Author, Company:   Alden Hart, Luke's Lights
                      00008 ;    Chip Support:      Supports PIC18F family
                      00009 ;    Revision:          091015
                      00010 ;
                      00011 ;    This file basically serves as documentation for creating cues and playback
                      00012 ;
                      00013 ;*****************************************************************************
                      00014 ; CUES AND PLAYBACK
                      00015 ; 
                      00016 ; PLAY_INIT               Init playlist/cue module and load first playlist/cue
                      00017 ; PLAY_GET_NEXT_PLAYLIST  Return ptr to next playlist in playlist master table
                      00018 ; PLAY_GET_PREV_PLAYLIST  Return ptr to previous playlist in playlist master table
                      00019 ; PLAY_START_PLAYIST      Start a playlist from playlist ptr (becomes active playlist)
                      00020 ; PLAY_RUN_NEXT_CUE       Run next cue in active playlist
                      00021 ;         
MPASM  5.34                      D18F4520.ASM   5-22-2010  11:42:38         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00022 ; CUE_LOAD_CUE            Load an entire cue
                      00023 ; CUE_GET_NEXT_COMMAND    Iterator used for for loading an entire cue
                      00024 ; CUE_GET_COMMAND         Load a single command from cue (into FDR_LOADER buffer)
                      00025 ; CUE_SET_ARGUMENT        Load an argument into arg table
                      00026 ; CUE_GET_ARGUMENT        Get an argument from arg table
                      00027 ;
                      00028 ; CUES
                      00029 ;
                      00030 ; A CUE is a set of COMMANDS that run as a unit to load the state of the 
                      00031 ; lighting system. A cue takes data from program memory and loads the commands
                      00032 ; in to the FADER tables (there are some exceptions).
                      00033 ;
                      00034 ; For example, if you wanted to load 8 different hue waveforms, set 
                      00035 ; saturations to 8 different static levels, and PATCH all brightnesses to a 
                      00036 ; master channel, this could be done using a cue. 
                      00037 ;
                      00038 ; The challenge is to define (and encode) complex cues in a way that's both 
                      00039 ; simple to understand and program and is also relatively memory efficicient. 
                      00040 ; The above example would take about ~200 bytes if performed as a simple set of 
                      00041 ; commands. Using the cue tools for definition and encoding this same 
                      00042 ; operation could be encoded in as little as ~20 bytes.
                      00043 ;
                      00044 ; To do this, a series of other operations is supported for cues:
                      00045 ; 
                      00046 ;       - CUE_CMD               load a regular command from pgm memory to RAM
                      00047 ;       - CUE_ARG               load an argument structure into an arg cell
                      00048 ;       - CUE_LOOP              load the next command N times           
                      00049 ;       - CUE_LOOP_BLOCK        loop until END_ADDR, N times, starting at START_ADDR
                      00050 ;       - CUE_JUMP              jump to JUMP_ADDR
                      00051 ;       - CUE_DONE              end of cue or playback
                      00052 ;       - CUE_CODA              start queue over
                      00053 ;
                      00054 ; Details of the above operations are littered throughout the headers in this
                      00055 ; file. Summaries of the cue operations are provided below;
                      00056 ;
                      00057 ; CUE_CMD:      CUE_CMD, cmd, argmask, arg0....argN
                      00058 ;
                      00059 ; Action is to load the command into RAM - similarly to if the command was 
                      00060 ; received in a serial RX buffer. Contains a command code followed by a 
                      00061 ; bitmask specifying which args in the command are to be read lterally from 
                      00062 ; the command line and which args are to be loaded from the argument cells. 
                      00063 ; The argmask is one byte long except in the case of the FADE command where 
                      00064 ; it is 2 bytes. See CUE_LOAD_COMMAND for details.
                      00065 ; 
                      00066 ; CUE_ARG:      CUE_ARG, argnum, opcode, var1, [var2], [var3]
                      00067 ;
                      00068 ; Action is to initialize one of the argument cells with an opcode and one or
                      00069 ; more starting values (vars). Consists of a CUE_ARG byte and 3 - 5 data
                      00070 ; bytes. Arguments can increment, decrement, add, and do other things between
                      00071 ; command calls that allow common commands to be set up generically.
                      00072 ; See CUE_LOAD_ARGUMENT for details.
                      00073 ;
                      00074 ; CUE_LOOP:             CUE_LOOP, repeat_count
MPASM  5.34                      D18F4520.ASM   5-22-2010  11:42:38         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00075 ;
                      00076 ; Action is to run the next command N times. The next table entry must be a 
                      00077 ; command.
                      00078 ;
                      00079 ; CUE_LOOP_BLOCK:       CUE_LOOP_BLOCK, repeat_count, start_address
                      00080 ;
                      00081 ; Action is to loop N times between the start address and CUE_DONE (the 
                      00082 ; "looping block"). CUE execution continues on the next line after the 
                      00083 ; CUE_LOOP_BLOCK command once the loop is complete.
                      00084 ;
                      00085 ; This command is useful to iterate through a series of channels with 
                      00086 ; parameters that vary based on the number of times an arg is used. Typically 
                      00087 ; a set of CUE_ARGS is setup before calling the block. This is useful to 
                      00088 ; create "subroutines" of commonly used preset operations. This command 
                      00089 ; DOES NOT nest and cannot be called recursively (sorry!).
                      00090 ;
                      00091 ; CUE_JUMP:             CUE_JUMP, jump_address
                      00092 ;
                      00093 ; Action is to transfer cue exeution to a new address, from which execution
                      00094 ; will not return. Any number of jumps may be chained. Useful for "finishing up"
                      00095 ; with common code.
                      00096 ;
                      00097 ; CUE_DONE:             CUE_DONE <no parameters>
                      00098 ;
                      00099 ; Signals the end of a cue block (see above descriptions). If found in 
                      00100 ; the main body of the called cue, it terminates the interpretation of the 
                      00101 ; cue and returns control to the caller. If found in a LOOP is terminates
                      00102 ; that iteration of the loop and returns control to the cue line that 
                      00103 ; called the loop.
                      00104 ; 
                      00105 ; 
                      00106 ; RESOURCE USAGE:
                      00107 ; - The PLAYBACK sub-system uses FSR1 as its primary pointer, FSR2 as secondary. 
                      00108 ; - Does not use FSR0 as this is reserved for interrupts.
                      00109 ; - The ARG table takes 128 bytes of RAM to store 32 arguments.
                      00110 ; - Routines follow the convnetion of returning Z bit set for OK, or to indicate
                      00111 ;   the further processing is required.
                      00112 
                      00113 ;----- Circuit and Command Processing Definitions ----
                      00114 ; See Ckt Mapping tab of spreadsheet for further documentation
                      00115 
  0000000D            00116 FDR_TABLE_LEN           equ     .13     ; bytes allocated per fader table
  00000015            00117 CHN_NUM_MAX             equ     .21     ; number of color or mono channels (zero based)
  0000001D            00118 CKT_NUM_MAX             equ     .29     ; maximum encoded circuit number (zero based)
  00000005            00119 CKT_TABLE_INCREMENT     equ     .5      ; number of ports being serviced
  00000027            00120 CKT_TABLE_LEN           equ     .39     ; circuit table is 5 ports * 8 bits (zero based)
                      00121 
  00000F80            00122 switch01p               equ     PORTA
  00000000            00123 switch01b               equ     .0
                      00124 
  00000001            00125 MONOCHROME_MODE         equ     TRUE    ; set TRUE if running monochrome, FALSE for color
                      00126 
                      00127 ; not used in monochrome mode apps
MPASM  5.34                      D18F4520.ASM   5-22-2010  11:42:38         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000000            00128 RED_OFFSET              equ     0       ; table offsets
  00000001            00129 GRN_OFFSET              equ     1
  00000002            00130 BLU_OFFSET              equ     2
  00000003            00131 EXT_OFFSET              equ     3       ; offset for extra channel
  00000000            00132 HUE_OFFSET              equ     0
  00000001            00133 SAT_OFFSET              equ     1
  00000002            00134 BRT_OFFSET              equ     2
                      00135 
                      00136 ;---- COMMAND SET ----
                      00137 ; Command set - MSbyte is command code, LSbyte is argument counter
                      00138 ; Adding a command involves:
                      00139 ;  - adding it to this list and adjusting any values
                      00140 ;  - adding it to CMD_LOADER dispatch table (led_fader.asm)
                      00141 ;  - adding it to CMD_VALIDATE_CMDCODE (led_fader.asm)
                      00142 ;  - adding it to CUE_GET_COMMAND (led_cue.asm)
                      00143 
  00000011            00144 SET_BRT                 equ     0x11    ; set BRT for color or monochrome
  00000023            00145 SET_HSB                 equ     0x23    ; set HSB values (color only)
  00000033            00146 SET_RGB                 equ     0x33    ; set RGB values (color only)
  00000041            00147 PATCH                   equ     0x41    ; PATCH command
  00000056            00148 FADE                    equ     0x56    ; FADE command args up through OFF
  00000057            00149 FADE_REPEAT             equ     0x57    ; FADE command args up through REPEAT 
  00000058            00150 FADE_MIN                equ     0x58    ; FADE command args up through MIN
  00000059            00151 FADE_MAX                equ     0x59    ; FADE command args up through MAX
  0000005A            00152 FADE_X                  equ     0x5A    ; FADE command args up through XFADE
  00000060            00153 WATCH                   equ     0x60    ; WATCH command - takes one arg (0)
                      00154 
  000000FF            00155 NOW                     equ     0xFF    ; WATCH command value - load now
  000000FE            00156 NEVER                   equ     0xFE    ; WATCH command value - never load
                      00157 
                      00158 ;---- Cue command line templates (very useful) ----
                      00159 ; SET_HSB       CUE_CMD  CMD_SET_HSB  mask  chn  hue   sat   brt        
                      00160 ; PATCH         CUE_CMD  CMD_PATCH  mask   slave_ckt     master_ckt
                      00161 ; FADE_46       CUE_CMD CMD_FADE  mask  ckt_num     presc  dly   up   on  down off      
                      00162 
                      00163 ;---- CUE AND PLAYBACK EQUATES ----
                      00164 
  00000000            00165 ARG_NUM_MAX             equ     .0      ; maximum argument number (zero is a valid #)
                      00166                                         ; each arg takes 4 bytes of RAM
  00000000            00167 ARG_HI_FLAG             equ     .0      ; bit to set and test for hi args (>7)
                      00168 
  00000000            00169 CUE_DONE                equ     .00     ; should be zero
  00000001            00170 CUE_CMD                 equ     .01     ; prefix for a command
  00000002            00171 CUE_ARG                 equ     .02     ; prefix for an argument
  00000003            00172 CUE_LOOP                equ     .03
  00000004            00173 CUE_LOOP_BLOCK          equ     .04
  00000005            00174 CUE_JUMP                equ     .05
  00000005            00175 CUE_MAX                 equ     .05     ; maximum allowable cmd instruction value
                      00176 
                      00177 ; MSbyte of these PLAYLIST_xxxx values must be zero:
  00000000            00178 PLAYLIST_DONE           equ     0x0000  ; requries a 16 bit value
  00000001            00179 PLAYLIST_CODA           equ     0x0001
                      00180 
MPASM  5.34                      D18F4520.ASM   5-22-2010  11:42:38         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00181 ;---- Argument OPCODE definitions ----
                      00182 ;
                      00183 ; Command arguments (args) are 4 byte structures that perform substitutions 
                      00184 ; for command variables during command loads. Args can perform literal 
                      00185 ; substitution for variables or a variety of simple math functions. Structure:
                      00186 ;
                      00187 ;       - Arg number    args number 0 - N. Implicit based on location in table
                      00188 ;       - Opcode        operation to perform during argument substitution
                      00189 ;       - Operand1      (op1) first operand interprested by opcode
                      00190 ;       - Operand2      (op2) second operand interprested by opcode
                      00191 ;       - Operand3      (op3) thirg operand interprested by opcode
                      00192 ;
                      00193 ; op2(op1) means use the value of op1 found at the argnum provided in op2
                      00194 ;   an arg error returns the value of zero.
                      00195 ;
                      00196 ; opcode            op1    op2    op3   usage
                      00197 ; OP_LIT            value  ---    ---   ; use op1 as literal value
                      00198 ; OP_INC            start  ---    ---   ; use op1, post increment & store in op1
                      00199 ; OP_INC_RANGE      start  max    min   ; inc by 1 [op2=max, op3=min], store in op1
                      00200 ; OP_INCX2_RANGE    start  max    min   ; inc by 2 [op2=max, op3=min], store in op1
                      00201 ; OP_INCX3_RANGE    start  max    min   ; inc by 3 [op2=max, op3=min], store in op1
                      00202 ; OP_INCX4_RANGE    start  max    min   ; inc by 4 [op2=max, op3=min], store in op1
                      00203 ; OP_DEC            start  ---    ---   ; use op1, post decrement & store in op1
                      00204 ; OP_DEC_RANGE      start  max    min   ; dec by 1 [op2=max, op3=min], store in op1
                      00205 ; OP_DECX2_RANGE    start  max    min   ; dec by 2 [op2=max, op3=min], store in op1
                      00206 ; OP_DECX3_RANGE    start  max    min   ; dec by 3 [op2=max, op3=min], store in op1
                      00207 ; OP_DECX4_RANGE    start  max    min   ; dec by 4 [op2=max, op3=min], store in op1
                      00208 ; OP_ADD            start  add    ---   ; (op1+op2), save result in op1
                      00209 ; OP_ADD_AND        start  add    and   ; (op1+op2), AND with op3, do not save result
                      00210 ; OP_ADD_AND_SAVE   start  add    and   ; (op1+op2), AND with op3l, save result in op1
                      00211 ; OP_ADD_IND        start  ind    ---   ; (op1+op2(op1)), do not save result
                      00212 ; OP_ADD_IND_SAVE   start  ind    ---   ; (op1+op2(op1)), save result in op1
                      00213 ; OP_ADD_IND_AND    start  ind    and   ; (op1+op2(op1)), AND with op3, do not save
                      00214 ; OP_ADD_IND_AND_SAVE srt  ind    and   ; (op1+op2(op1)), AND with op3, save in op1
                      00215 ; OP_SUB            start  sub    ---   ; (op1-op2), save result in op1
                      00216 ; OP_SUB_AND        start  sub    and   ; (op1-op2), AND with op3, do not save result
                      00217 ; OP_SUB_AND_SAVE   start  sub    and   ; (op1-op2), AND with op3, save in op1
                      00218 ; OP_SUB_IND        start  ind    ---   ; (op1-op2(op1)), do not save result
                      00219 ; OP_SUB_IND_SAVE   start  ind    ---   ; (op1-op2(op1)), save result in op1
                      00220 ; OP_SUB_IND_AND    start  ind    and   ; (op1-op2(op1)), AND with op3, do not save
                      00221 ; OP_SUB_IND_AND_SAVE srt  ind    and   ; (op1-op2(op1)), AND with op3, save in op1
                      00222 ; OP_RAND           seed   ---    ---   ; pseudo-random#, op1=seed, update seed
                      00223 ; OP_RAND_RANGE     seed   max    min   ; pseudo-random# [op2=max, op3=min], op1=seed
                      00224 
                      00225 ; actual definitions used by the code:
                      00226 
  00000000            00227 OP_LIT                  equ     .00     ; use op1 as literal value
  00000001            00228 OP_INC                  equ     .01     ; use op1, post increment & store in op1
  00000002            00229 OP_INC_RANGE            equ     .02     ; inc by 1 [op2=max, op3=min], store in op1
  00000003            00230 OP_INCX2_RANGE          equ     .03     ; inc by 2 [op2=max, op3=min], store in op1
  00000004            00231 OP_INCX3_RANGE          equ     .04     ; inc by 3 [op2=max, op3=min], store in op1
  00000005            00232 OP_INCX4_RANGE          equ     .05     ; inc by 4 [op2=max, op3=min], store in op1
  00000006            00233 OP_DEC                  equ     .06     ; use op1, post decrement & store in op1
MPASM  5.34                      D18F4520.ASM   5-22-2010  11:42:38         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000007            00234 OP_DEC_RANGE            equ     .07     ; dec by 1 [op2=max, op3=min], store in op1
  00000008            00235 OP_DECX2_RANGE          equ     .08     ; dec by 2 [op2=max, op3=min], store in op1
  00000009            00236 OP_DECX3_RANGE          equ     .09     ; dec by 3 [op2=max, op3=min], store in op1
  0000000A            00237 OP_DECX4_RANGE          equ     .10     ; dec by 4 [op2=max, op3=min], store in op1
  0000000B            00238 OP_ADD                  equ     .11     ; (op1+op2), save result in op1
  0000000C            00239 OP_ADD_AND              equ     .12     ; (op1+op2), AND with op3, do not save result
  0000000D            00240 OP_ADD_AND_SAVE         equ     .13     ; (op1+op2), AND with op3l, save result in op1
  0000000E            00241 OP_ADD_IND              equ     .14     ; (op1+op2(op1)), do not save result
  0000000F            00242 OP_ADD_IND_SAVE         equ     .15     ; (op1+op2(op1)), save result in op1
  00000010            00243 OP_ADD_IND_AND          equ     .16     ; (op1+op2(op1)), AND with op3, do not save
  00000011            00244 OP_ADD_IND_AND_SAVE     equ     .17     ; (op1+op2(op1)), AND with op3, save in op1
  00000012            00245 OP_SUB                  equ     .18     ; (op1-op2), save result in op1
  00000013            00246 OP_SUB_AND              equ     .19     ; (op1-op2), AND with op3, do not save result
  00000014            00247 OP_SUB_AND_SAVE         equ     .20     ; (op1-op2), AND with op3, save in op1
  00000015            00248 OP_SUB_IND              equ     .21     ; (op1-op2(op1)), do not save result
  00000016            00249 OP_SUB_IND_SAVE         equ     .22     ; (op1-op2(op1)), save result in op1
  00000017            00250 OP_SUB_IND_AND          equ     .23     ; (op1-op2(op1)), AND with op3, do not save
  00000018            00251 OP_SUB_IND_AND_SAVE     equ     .24     ; (op1-op2(op1)), AND with op3, save in op1
  00000019            00252 OP_RAND                 equ     .25     ; pseudo-random#, op1=seed, update seed
  0000001A            00253 OP_RAND_RANGE           equ     .26     ; pseudo-random# [op2=max, op3=min], op1=seed
  0000001A            00254 OP_OPCODE_MAX           equ     .26     ; MAXIMUM LEGAL OPCODE VALUE
                      00255 
                      00256 
                      00257 ;--- SOME USEFUL SHORTHAND ----
                      00258 
  00000000            00259 HUE     equ     HUE_OFFSET
  00000001            00260 SAT     equ     SAT_OFFSET
  00000002            00261 BRT     equ     BRT_OFFSET
                      00262 
                      00263 ; Colors (applies to HUE)
                      00264 
  00000000            00265 RED     equ     0x00                    ; red
  00000015            00266 ORN     equ     0x15                    ; orange
  0000002A            00267 YEL     equ     0x2A                    ; yellow
  00000055            00268 GRN     equ     0x55                    ; green
  0000007F            00269 CYN     equ     0x7F                    ; cyan
  000000AB            00270 BLU     equ     0xAB                    ; blue
  000000D5            00271 MAG     equ     0xD5                    ; magenta
  000000D5            00272 VIO     equ     MAG                     ; violet = magenta
                      00273 
                      00274 ; Channel specifiers with the 2 left shifts:
  00000000            00275 c00     equ     .00 <<2
  00000004            00276 c01     equ     .01 <<2
  00000008            00277 c02     equ     .02 <<2
  0000000C            00278 c03     equ     .03 <<2
  00000010            00279 c04     equ     .04 <<2
  00000014            00280 c05     equ     .05 <<2
  00000018            00281 c06     equ     .06 <<2
  0000001C            00282 c07     equ     .07 <<2
  00000020            00283 c08     equ     .08 <<2
  00000024            00284 c09     equ     .09 <<2
  00000028            00285 c10     equ     .10 <<2
  0000002C            00286 c11     equ     .11 <<2
MPASM  5.34                      D18F4520.ASM   5-22-2010  11:42:38         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000030            00287 c12     equ     .12 <<2
  00000034            00288 c13     equ     .13 <<2
  00000038            00289 c14     equ     .14 <<2
  0000003C            00290 c15     equ     .15 <<2
  00000040            00291 c16     equ     .16 <<2
  00000044            00292 c17     equ     .17 <<2
  00000048            00293 c18     equ     .18 <<2
  0000004C            00294 c19     equ     .19 <<2
  00000050            00295 c20     equ     .20 <<2
  00000054            00296 c21     equ     .21 <<2
  00000058            00297 c22     equ     .22 <<2
  0000005C            00298 c23     equ     .23 <<2
  00000060            00299 c24     equ     .24 <<2
  00000064            00300 c25     equ     .25 <<2
  00000068            00301 c26     equ     .26 <<2
  0000006C            00302 c27     equ     .27 <<2
  00000070            00303 c28     equ     .28 <<2
  00000074            00304 c29     equ     .29 <<2
  00000078            00305 c30     equ     .30 <<2
  0000007C            00306 c31     equ     .31 <<2
  00000080            00307 c32     equ     .32 <<2
  00000084            00308 c33     equ     .33 <<2
  00000088            00309 c34     equ     .34 <<2
  0000008C            00310 c35     equ     .35 <<2
  00000090            00311 c36     equ     .36 <<2
  00000094            00312 c37     equ     .37 <<2
  00000098            00313 c38     equ     .38 <<2
  0000009C            00314 c39     equ     .39 <<2
  000000A0            00315 c40     equ     .40 <<2
  000000A4            00316 c41     equ     .41 <<2
  000000A8            00317 c42     equ     .42 <<2
  000000AC            00318 c43     equ     .43 <<2
  000000B0            00319 c44     equ     .44 <<2
  000000B4            00320 c45     equ     .45 <<2
  000000B8            00321 c46     equ     .46 <<2
  000000BC            00322 c47     equ     .47 <<2
  000000C0            00323 c48     equ     .48 <<2
  000000C4            00324 c49     equ     .49 <<2
  000000C8            00325 c50     equ     .50 <<2
  000000CC            00326 c51     equ     .51 <<2
  000000D0            00327 c52     equ     .52 <<2
  000000D4            00328 c53     equ     .53 <<2
  000000D8            00329 c54     equ     .54 <<2
  000000DC            00330 c55     equ     .55 <<2
  000000E0            00331 c56     equ     .56 <<2
  000000E4            00332 c57     equ     .57 <<2
  000000E8            00333 c58     equ     .58 <<2
  000000EC            00334 c59     equ     .59 <<2
  000000F0            00335 c60     equ     .60 <<2
  000000F4            00336 c61     equ     .61 <<2
  000000F8            00337 c62     equ     .62 <<2
  000000FC            00338 c63     equ     .63 <<2
                      00339 
MPASM  5.34                      D18F4520.ASM   5-22-2010  11:42:38         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00340         
                      00022 #include <APP_INCLUDE_FILE>             ; 4: Application include file
                      00001 ;*****************************************************************************
                      00002 ; wClock - common header file
                      00003 ;*****************************************************************************
                      00004 ;
                      00005 ;    Filename:          wClock.inc
                      00006 ;    Author, Company:   Alden Hart, Luke's Lights
                      00007 ;    Date/Time/Rev:     091015
                      00008 ;
                      00009 ;    'sproke notes: If shit breaks, look in the following places:
                      00010 ;       - test ISR dispatcher for not crossing a page boundary
                      00011 ;       - look for all occurrences of "HACK HACK"
                      00012 
                      00013 ;------ Application Switches -----      
                      00014 ; The default initialization routines are provided in the device file: d18fxxxx.asm
                      00015 ; Setting an _EXTERNAL switch TRUE will use an init located in some other file.
                      00016 ; You must also set up an extern in the d18fxxxx.asm file and a global in the 
                      00017 ; target application file to override the default init.
                      00018 
  00000001            00019 INIT_PORTS_EXTERNAL     equ     TRUE    ; set true to use an external init routine
  00000001            00020 INIT_T0_EXTERNAL        equ     TRUE    ; uses the one in wClock.asm
  00000001            00021 INIT_T1_EXTERNAL        equ     TRUE    ; uses the one in led_ckt4520.asm
  00000001            00022 INIT_WATCHDOG_TIMER     equ     TRUE    ; set if WDT enabled. See WDT_INIT
                      00023 
                      00024 ;----- Assembly-Time Switches ------
                      00025 
  00000000            00026 RX_ENABLED              equ     FALSE   ; enable RX ISR processing
  00000000            00027 ICD_ENABLED             equ     FALSE   ; enable ICD2 debugging
  00000001            00028 UNITS_ENABLED           equ     TRUE    ; enable unit tests
  00000001            00029 DIAGNOSTICS_ENABLED     equ     TRUE    ; takes up space and time
                      00030 
  00000BDC            00031 CLK_TIMER               equ     0x0BDC  ; value for prescale 128 (rev 1)
                      00032 ;CLK_TIMER              equ     0xC000  ; TEST value for prescale 128
                      00033 
                      00034 ;----- switch port assignments and equates
                      00035 
  00000008            00036 SW_DEBOUNCE_MAX         equ     .8      ; # of 6.66 ms cycles to debounce switch
  0000003C            00037 SW_HELD_COUNT           equ     .60     ; # of 6.66 ms increments before advance
  00000000            00038 SW_STATE_ON_bp          equ     .00     ; 1=switch is on  0=switch is off
  00000001            00039 SW_STATE_RISING_bp      equ     .01     ; rising edge (this state can be removed)
  00000002            00040 SW_STATE_FALLING_bp     equ     .02     ; falling edge (this state can be removed)
                      00041 
                      00042 ;----- Table program memory allocation -----
                      00043 ; The following  tables must be aligned on a 0x100 page boundary
                      00044 ; Look at the eFruit.map file for optimal placement
                      00045 
  00002000            00046 BASE_OF_TABLES          equ     0x2000
  00000600            00047 HSB_TABLES_LEN          equ     0x600
                      00048 ;HSB_TABLES_LEN         equ     0x00
                      00049 
  00002000            00050 HSB_TABLES_START        equ     BASE_OF_TABLES
  00002600            00051 CUE_TABLES_START        equ     HSB_TABLES_START + HSB_TABLES_LEN 
MPASM  5.34                      D18F4520.ASM   5-22-2010  11:42:38         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00052 ; Cue tables can use the rest of program memory if they need to, and should be last
                      00053 
                      00054 ;--- Flag values for app_flags ----
                      00055 ; Notes on TIME bits:
                      00056 ; - TIME_5MS is an approximate flag set by cycle processing (for switch timing)
                      00057 ; - The other TIME flags are managed by CLK_IRQ
                      00058 
  00000000            00059 DIRTY_BIT               equ     0       ; set to signal new dimmer value
  00000001            00060 CYCLE_START_FLAG        equ     1       ; set once per cycle during BAM interval
  00000002            00061 SWITCH_READ_FLAG        equ     2       ; is set approx every 6 ms
  00000003            00062 SECOND_FLAG             equ     3       ; is set every second (exactly)
                      00063 
                      00064 ;---- Word to channel mapping ----
                      00065 
  00000000            00066 ITS             equ     .0              ; Channel 0 is "IT'S"
  00000001            00067 HALF            equ     .1
  00000002            00068 TEN_            equ     .2              ; differentiate from hour TEN
  00000003            00069 QUARTER         equ     .3
  00000004            00070 TWENTY          equ     .4
  00000005            00071 FIVE_           equ     .5              ; differentiate from hour FIVE
  00000006            00072 MINUTES         equ     .6
  00000007            00073 PAST            equ     .7
  00000008            00074 TO_             equ     .8              ; must have an underscore
  00000009            00075 ONE             equ     .9
  0000000A            00076 TWO             equ     .10
  0000000B            00077 THREE           equ     .11
  0000000C            00078 FOUR            equ     .12
  0000000D            00079 FIVE            equ     .13
  0000000E            00080 SIX             equ     .14
  0000000F            00081 SEVEN           equ     .15
  00000010            00082 EIGHT           equ     .16
  00000011            00083 NINE            equ     .17
  00000012            00084 TEN             equ     .18
  00000013            00085 ELEVEN          equ     .19
  00000014            00086 TWELVE          equ     .20
  00000015            00087 OCLOCK          equ     .21
                      00088 ;PLUS_1         equ     .22
                      00089 ;PLUS_2         equ     .23
                      00090 ;PLUS_3         equ     .24
                      00091 ;PLUS_4         equ     .25
                      00023 
                      00024 ;------ Exported functions and variables -----
                      00025 
  0000                00026         global  MASTER_INIT
  0000                00027         global  WDT_START               ; export watchdog timer startup
                      00028 
                      00029 ;------ Imported functions and variables -----
                      00030 
                      00031     if INIT_PORTS_EXTERNAL
  0000                00032         extern  PORT_INIT               ; somebody must export PORT_INIT
                      00033     endif
                      00034     if INIT_T0_EXTERNAL
  0000                00035         extern  T0_INIT                 ; somebody must export these T0's
MPASM  5.34                      D18F4520.ASM   5-22-2010  11:42:38         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                00036         extern  T0_STOP
  0000                00037         extern  T0_START
                      00038     endif
                      00039     if INIT_T1_EXTERNAL
  0000                00040         extern  T1_INIT                 ; somebody must export these T1's
  0000                00041         extern  T1_STOP
  0000                00042         extern  T1_START
                      00043     endif
                      00044 
                      00045 ;----- Configuration bits -----         ; See p18f2520.inc for definitions
                      00046 
                      00047 ;       CONFIG  OSC = INTIO67           ; Internal osc w/port function RA6, RA7
                      00048         CONFIG  OSC = HSPLL             ; IExternal osc w/PLL
                      00049         CONFIG  FCMEN = OFF             ; Fail-Safe Clock Monitor
                      00050         CONFIG  IESO = OFF              ; Internal/External Oscillator Switchover
                      00051         CONFIG  PWRT = OFF              ; Power-up Timer
                      00052         CONFIG  BOREN = OFF             ; Brown-out Reset Enable
                      00053         CONFIG  BORV = 0                ; Brown-out Reset Voltage
                      00054 
                      00055 ;       CONFIG  WDT = ON                ; Watchdog Timer Enable (OFF/ON)
                      00056         CONFIG  WDT = OFF               ; Watchdog Timer Enable (OFF/ON)
                      00057         CONFIG  WDTPS = 8               ; Watchdog Timer Postscale Select Bits
                      00058                                         ; legal values are binary strings, e.g.
                      00059                                         ; 1, 2, 4, 8, 16...
                      00060 
                      00061 ;       CONFIG  MCLRE = ON              ; MCLR Pin Enable - should be ON
                      00062         CONFIG  MCLRE = OFF             ; MCLR Pin Enable - should be ON
                      00063 
                      00064         CONFIG  LPT1OSC = OFF           ; Low-Power Timer1 Oscillator Enable 
                      00065         CONFIG  PBADEN = OFF            ; PORTB A/D Enable
                      00066         CONFIG  CCP2MX = PORTC          ; ECCP/P2A multiplexed with RC1
                      00067         CONFIG  STVREN = ON             ; Stack Full/Underflow Reset Enable
                      00068 
                      00069         CONFIG  LVP = OFF               ; Single-Supply ICSP Enable
                      00070 ;       CONFIG  LVP = ON                ; Single-Supply ICSP Enable
                      00071 
                      00072         CONFIG  XINST = OFF             ; Extended Instruction Set Enable 
                      00073         CONFIG  DEBUG = OFF             ; Background Debugger Enable
                      00074 
                      00075         CONFIG  CP0 = OFF               ; Code Protection bit Block 0
                      00076         CONFIG  CP1 = OFF               ; Code Protection bit Block 1
                      00077     if DEVTYPE == 4520
                      00078         CONFIG  CP2 = OFF               ; Code Protection bit Block 2
                      00079         CONFIG  CP3 = OFF               ; Code Protection bit Block 3
                      00080     endif
                      00081         CONFIG  CPB = OFF               ; Boot Block Code Protection
                      00082         CONFIG  CPD = OFF               ; Data EEROM Code Protection Bit
                      00083         CONFIG  WRT0 = OFF              ; Write Protection bit Block 0
                      00084         CONFIG  WRT1 = OFF              ; Write Protection bit Block 1
                      00085     if DEVTYPE == 4520
                      00086         CONFIG  WRT2 = OFF              ; Write Protection bit Block 2
                      00087         CONFIG  WRT3 = OFF              ; Write Protection bit Block 3
                      00088     endif
MPASM  5.34                      D18F4520.ASM   5-22-2010  11:42:38         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00089         CONFIG  WRTB = OFF              ; Boot Block Write Protection
                      00090         CONFIG  WRTC = OFF              ; Configuration Register Write Protection
                      00091         CONFIG  WRTD = OFF              ; Data EEROM Write Protection Bit
                      00092         CONFIG  EBTR0 = OFF             ; Table Read Protection bit Block 0
                      00093         CONFIG  EBTR1 = OFF             ; Table Read Protection bit Block 1
                      00094     if DEVTYPE == 4520
                      00095         CONFIG  EBTR2 = OFF             ; Table Read Protection bit Block 2
                      00096         CONFIG  EBTR3 = OFF             ; Table Read Protection bit Block 3
                      00097     endif
                      00098 
                      00099 
                      00100 
                      00101 CODE_DEVICE_INITS       code
                      00102 
                      00103 ;******************************************************************************
                      00104 ; MASTER_INIT
                      00105 ; Init subroutines handle all initialization for their respective sub-system, 
                      00106 ; including interrupts, which are enabled en-masse at the end via GIE enables.
                      00107 
000000                00108 MASTER_INIT
000000 6AE0           00109         clrf    BSR                     ; set to bank 0
                      00110 
                      00111         ; call initialization routines for peripherals and ports
                      00112         ; NOTE: Required routine sequence is noted. Change with caution.
                      00113 
000002 EC?? F???      00114         call    RESET_INIT      ; #0    ; resets and interrupts
000006 EC?? F???      00115         call    OSC_INIT        ; #1    ; oscillator module
00000A EC?? F???      00116         call    WDT_INIT        ; #2    ; init and stop WDT. start from main loop
00000E EC?? F???      00117         call    RAM_INIT        ; #3    ; clear all user ram ( set to all 0's )
000012 EC?? F???      00118         call    AD_INIT         ; #4    ; AD init should precede port inits
000016 EC?? F???      00119         call    PORT_INIT       ; #5    ; setup ports before other inits
                      00120 
00001A EC?? F???      00121         call    CCP_INIT                ; all capture / compare / PWM modules
00001E EC?? F???      00122         call    CMP_INIT                ; comparator module
                      00123 
000022 EC?? F???      00124         call    T0_INIT                 ; timers - start timers from main loop
000026 EC?? F???      00125         call    T1_INIT
00002A EC?? F???      00126         call    T2_INIT
00002E EC?? F???      00127         call    T3_INIT
                      00128 
000032 EC?? F???      00129         call    MSSP_INIT               ; MSSP - takes some IO ports
000036 EC?? F???      00130         call    USART_INIT              ; EUSART - takes some IO ports
                      00131 
                      00132 ; do this at the end of the START code so other application inits can run first 
                      00133 ;       bsf     INTCON,GIEH             ; enable hi priority interrupts
                      00134 ;       bsf     INTCON,GIEL             ; enable lo priority interrupts
                      00135 
00003A 0012           00136         return
                      00137 
                      00138 ;******************************************************************************
                      00139 ; RESET_INIT  - Init resets and interrupts
                      00140 
  00000080            00141 RCON_INIT       equ     b'10000000'     ; IPEN = 1 (enable priority interrupts)
MPASM  5.34                      D18F4520.ASM   5-22-2010  11:42:38         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00142                                         ; SBOREN = 0 (SW brown out reset disabled)
00003C                00143 RESET_INIT
00003C 0E80           00144         movlw   RCON_INIT               ; enable priority interrupt scheme
00003E 6ED0           00145         movwf   RCON
                      00146         ; disable and clear all interrupts
                      00147         ; enabled by individual device inits and starts
000040 6AF2           00148         clrf    INTCON                  ; clear interrupt register (& GIEs)
000042 6AF1           00149         clrf    INTCON2
000044 6AF0           00150         clrf    INTCON3
000046 6A9E           00151         clrf    PIR1                    ; clear all interrput request bits
000048 6AA1           00152         clrf    PIR2
00004A 6A9D           00153         clrf    PIE1                    ; clear all interrput enable bits
00004C 6AA0           00154         clrf    PIE2
00004E 6A9F           00155         clrf    IPR1                    ; set all interrupts to low priority
000050 6AA2           00156         clrf    IPR2
000052 0012           00157         return
                      00158 
                      00159 
                      00160 ;******************************************************************************
                      00161 ; OSC_INIT  - Init internal oscillators 
                      00162 
  00000070            00163 OSCCON_INIT     equ     b'01110000'     ; IDLEN = 0
                      00164                                         ; IRCF = 111 (8 Mhz)
                      00165                                         ; SCS = 00 (default primary oscillator)
  0000005F            00166 OSCTUNE_INIT    equ     b'01011111'     ; INTSRC = 0 (internal src of 31.25 Khz)
                      00167                                         ; PLLEN = 1 (PLL enabled)
                      00168                                         ; TUN = Maximum frequency
000054                00169 OSC_INIT
000054 0E70           00170         movlw   OSCCON_INIT             ; initialize oscillator setting
000056 6ED3           00171         movwf   OSCCON
000058 0E5F           00172         movlw   OSCTUNE_INIT            ; tune FOSC up or down
00005A 6E9B           00173         movwf   OSCTUNE
00005C 0012           00174         return
                      00175 
                      00176 
                      00177 ;******************************************************************************
                      00178 ; WDT_INIT  - Init watchdog timer
                      00179 ; WDT_START - Start watchdog timer
                      00180 ; WDT_STOP  - Stop watchdog timer
                      00181 ;
                      00182 ; WDT_INIT does not start the WDT, this should be done from the main loop
                      00183 
  00000000            00184 WDTCON_INIT     equ     b'00000000'     ; WDT off
  00000001            00185 WDTCON_START    equ     b'00000001'     ; WDT on
                      00186 ; NOTE: Postscaler value must be set in configuration registers
                      00187 
00005E                00188 WDT_INIT
00005E                00189 WDT_STOP
00005E 0E00           00190         movlw   WDTCON_INIT
000060 6ED1           00191         movwf   WDTCON
000062 0012           00192         return
                      00193 
000064                00194 WDT_START
MPASM  5.34                      D18F4520.ASM   5-22-2010  11:42:38         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000064 0E01           00195         movlw   WDTCON_START
000066 6ED1           00196         movwf   WDTCON
000068 0012           00197         return
                      00198 
                      00199 ;******************************************************************************
                      00200 ; RAM_INIT - set data RAM to all 0x00's
                      00201 
00006A                00202 RAM_INIT
00006A EE02 F0FF      00203         lfsr    FSR0,MAXRAM             ; clear down from top GPR address
00006E 6AED           00204 RT_0    clrf    POSTDEC0
000070 50EA           00205         movf    FSR0H,W                 ; load W to test for bank zero
000072 A4D8           00206         btfss   STATUS,Z
000074 D???           00207         bra     RT_0
000076 50E9           00208         movf    FSR0L,W                 ; load W to test for location zero
000078 A4D8           00209         btfss   STATUS,Z
00007A D???           00210         bra     RT_0
00007C 6AEF           00211         clrf    INDF0
00007E 0012           00212         return
                      00213 
                      00214 ;******************************************************************************
                      00215 ; AD_INIT  - Initialize AD module
                      00216 ; AD_STOP  - Stop AD module
                      00217 ; AD_START - Start AD module
                      00218 ;
                      00219 ; INIT must always be called - so ports are properly disabled
                      00220 
  00000000            00221 ADCON0_INIT     equ     b'00000000'     ; ADON = 0 (disabled)
  0000000F            00222 ADCON1_INIT     equ     b'00001111'     ; PCFG = 1111 (set as digital ports)
  00000000            00223 ADCON2_INIT     equ     b'00000000'     ; off
                      00224 
  00000000            00225 ADCON0_START    equ     b'00000000'     ; ADON = 0 (disabled)
  0000000F            00226 ADCON1_START    equ     b'00001111'     ; PCFG = 1111 (set as digital ports)
  00000000            00227 ADCON2_START    equ     b'00000000'     ; off
                      00228 
000080                00229 AD_INIT
000080                00230 AD_STOP
000080 0E00           00231         movlw   ADCON0_INIT
000082 6EC2           00232         movwf   ADCON0
000084 0E0F           00233         movlw   ADCON1_INIT
000086 6EC1           00234         movwf   ADCON1
000088 0E00           00235         movlw   ADCON2_INIT
00008A 6EC0           00236         movwf   ADCON2
00008C 0012           00237         return
                      00238 
00008E                00239 AD_START
00008E 0E00           00240         movlw   ADCON0_START
000090 6EC2           00241         movwf   ADCON0
000092 0E0F           00242         movlw   ADCON1_START
000094 6EC1           00243         movwf   ADCON1
000096 0E00           00244         movlw   ADCON2_START
000098 6EC0           00245         movwf   ADCON2
                      00246 ;       bsf     PIE1,ADIE               ; enable AD irq (do PEIE & GIE later)
                      00247 ;       bcf     PIR1,ADIF               ; clear AD interrupt flag
MPASM  5.34                      D18F4520.ASM   5-22-2010  11:42:38         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00248 ;       bsf     IPR1,ADIP               ; 1 = high-priority
00009A 0012           00249         return
                      00250 
                      00251 
                      00252 ;******************************************************************************
                      00253 ; PORT_INIT - Initialize all ports - sets pins as in/out/analog/etc.
                      00254 ;
                      00255 ; Modules that affect the digital IO ports:
                      00256 ;       - AD_INIT       AD must be set to digital ports
                      00257 ;       - CMP_INIT      COmparator defaults are for digital ports
                      00258 ;
                      00259 ; Note: doesn't deal with PORTB weak pullups, which disable on output and reset
                      00260 
                      00261     if INIT_PORTS_EXTERNAL == FALSE     ; value set in dev .inc file d18f4520.inc
                      00262 
                      00263 TRISA_INIT      equ     b'00000000'     ; all outputs
                      00264 TRISB_INIT      equ     b'00000000'     ; all outputs
                      00265 TRISC_INIT      equ     b'00000000'     ; all outputs
                      00266 
                      00267     if DEVTYPE == 4420 | DEVTYPE == 4520
                      00268 
                      00269 TRISD_INIT      equ     b'00000000'     ; 4420/4520 only
                      00270 TRISE_INIT      equ     b'00000000'     ; 4420/4520 only
                      00271     endif
                      00272 
                      00273 PORT_INIT
                      00274         movlw   TRISA_INIT
                      00275         movwf   TRISA
                      00276         movlw   TRISB_INIT
                      00277         movwf   TRISB
                      00278         movlw   TRISC_INIT
                      00279         movwf   TRISC
                      00280 
                      00281     if DEVTYPE == 4420 | DEVTYPE == 4520
                      00282         movlw   TRISD_INIT
                      00283         movwf   TRISD
                      00284         movlw   TRISE_INIT
                      00285         movwf   TRISE
                      00286     endif
                      00287 
                      00288 ;       bsf     INTCON,PEIE             ; peripheral irq must also be enabled
                      00289         return
                      00290     endif
                      00291 
                      00292 
                      00293 ;******************************************************************************
                      00294 ; T0_INIT  - Initialize timer0
                      00295 ; T0_STOP  - Stop timer0
                      00296 ; T0_START - Start timer0
                      00297 
                      00298     if INIT_T0_EXTERNAL == FALSE
                      00299 
                      00300 T0CON_INIT      equ     b'00000111'     ; 7 - TMR0ON = 0 (0FF, see pg 123)
MPASM  5.34                      D18F4520.ASM   5-22-2010  11:42:38         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00301                                         ; 6 - T08BIT = 0 (as 16 bit timer)
                      00302                                         ; 5 - T0CS = 0 (internal clock)
                      00303                                         ; 4 - TOSC = 0 (lo to hi transition)
                      00304                                         ; 3 - PSA = 0 (use the prescaler)
                      00305                                         ; 2-0 T0PS = 111 (256 prescale)
                      00306 T0CON_START     equ     T0CON_INIT | 0x80 ; TMR0ON = 1 (0N)
                      00307 
                      00308 TMR0H_INIT      equ     0x00            ; initial HI value
                      00309 TMR0L_INIT      equ     0x00            ; initial LO value
                      00310 
                      00311 T0_INIT
                      00312 T0_STOP movlw   T0CON_INIT
                      00313         movwf   T0CON
                      00314         bcf     INTCON,TMR0IF           ; clear interrupt flag
                      00315         bcf     INTCON,TMR0IE           ; disable interrupts
                      00316         return
                      00317 
                      00318 T0_START 
                      00319         movlw   T0CON_START
                      00320         movwf   T0CON
                      00321         movlw   TMR0L_INIT
                      00322         movwf   TMR0L
                      00323         movlw   TMR0H_INIT
                      00324         movwf   TMR0H
                      00325         bcf     INTCON,TMR0IF           ; clear interrupt flag
                      00326 ;       bsf     INTCON,TMR0IE           ; enable interrupts
                      00327         ; pick one...
                      00328 ;       bsf     INTCON2,TMR0IP          ; 1 = high priority
                      00329 ;       bcf     INTCON2,TMR0IP          ; 0 = low priority
                      00330         return
                      00331     endif
                      00332 
                      00333 ;******************************************************************************
                      00334 ; T1_INIT  - Initialize timer1
                      00335 ; T1_STOP  - Stop timer1
                      00336 ; T1_START - Start timer1
                      00337 
                      00338     if INIT_T1_EXTERNAL == FALSE
                      00339 
                      00340 T1CON_INIT      equ     b'10000000'     ; RD16 = 1 (16 bit R/W, see pg 127)
                      00341                                         ; TMR1ON = 0 (timer is OFF)
                      00342 T1CON_START     equ     b'10000001'     ; TMR1ON = 1 (timer is ON)
                      00343 
                      00344 TMR1L_INIT      equ     0x00            ; initial LO value
                      00345 TMR1H_INIT      equ     0x00            ; initial HI value
                      00346 
                      00347 T1_INIT
                      00348 T1_STOP 
                      00349         movlw   T1CON_INIT
                      00350         movwf   T1CON
                      00351         bcf     PIR1,TMR1IF             ; clear interrupt flag
                      00352         bcf     PIE1,TMR1IE             ; disable interrupts
                      00353         bcf     IPR1,TMR1IP             ; set to low priority
MPASM  5.34                      D18F4520.ASM   5-22-2010  11:42:38         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00354         return
                      00355 
                      00356 T1_START 
                      00357         movlw   T1CON_START
                      00358         movwf   T1CON
                      00359         movlw   TMR1L_INIT
                      00360         movwf   TMR1L
                      00361         movlw   TMR1H_INIT
                      00362         movwf   TMR1H
                      00363         bcf     PIR1,TMR1IF             ; clear interrupt flag
                      00364         bsf     PIE1,TMR1IE             ; enable interrupts
                      00365         bsf     IPR1,TMR1IP             ; 1 = high priority
                      00366         return
                      00367     endif
                      00368 
                      00369 
                      00370 ;******************************************************************************
                      00371 ; T2_INIT  - Initialize timer2
                      00372 ; T2_STOP  - Stop timer2
                      00373 ; T2_START - Start timer2 
                      00374 
  00000000            00375 T2CON_INIT      equ     b'00000000'     ; TMR2ON = 0 (disabled, see pg 133)
  00000004            00376 T2CON_START     equ     b'00000100'     ; TMR2ON = 1 (enabled)
                      00377 
  00000000            00378 TMR2_INIT       equ     0x00            ; timer register
  00000000            00379 PR2_INIT        equ     0x00            ; period register
                      00380 
00009C                00381 T2_INIT
00009C 0E00           00382 T2_STOP movlw   T2CON_INIT
00009E 6ECA           00383         movwf   T2CON
0000A0 929E           00384         bcf     PIR1,TMR2IF             ; clear interrupt flag
0000A2 929D           00385         bcf     PIE1,TMR2IE             ; disable interrupts
0000A4 929F           00386         bcf     IPR1,TMR2IP             ; set to low priority
0000A6 0012           00387         return
                      00388 
0000A8                00389 T2_START
0000A8 0E04           00390         movlw   T2CON_START
0000AA 6ECA           00391         movwf   T2CON
0000AC 0E00           00392         movlw   TMR2_INIT
0000AE 6ECC           00393         movwf   TMR2
0000B0 0E00           00394         movlw   PR2_INIT
0000B2 6ECB           00395         movwf   PR2
0000B4 929E           00396         bcf     PIR1,TMR2IF             ; clear interrupt flag
                      00397 ;       bsf     PIE1,TMR2IE             ; enable interrupts
                      00398 ;       bsf     IPR1,TMR2IP             ; set to high priority
0000B6 0012           00399         return
                      00400 
                      00401 ;******************************************************************************
                      00402 ; T3_INIT  - Initialize timer
                      00403 ; T3_STOP  - Stop timer
                      00404 ; T3_START - Start timer
                      00405 
  00000080            00406 T3CON_INIT      equ     b'10000000'     ; RD16 = 1 (16 bit R/W, see pg 135)
MPASM  5.34                      D18F4520.ASM   5-22-2010  11:42:38         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00407                                         ; TMR3ON = 0 (timer is OFF)
  00000081            00408 T3CON_START     equ     b'10000001'     ; TMR3ON = 1 (timer is ON)
                      00409 
  00000000            00410 TMR3L_INIT      equ     0x00            ; initial LO value
  00000000            00411 TMR3H_INIT      equ     0x00            ; initial HI value
                      00412 
0000B8                00413 T3_INIT
0000B8 0E80           00414 T3_STOP movlw   T3CON_INIT
0000BA 6EB1           00415         movwf   T3CON
0000BC 929E           00416         bcf     PIR1,TMR3IF             ; clear interrupt flag
0000BE 929D           00417         bcf     PIE1,TMR3IE             ; disable interrupts
0000C0 929F           00418         bcf     IPR1,TMR3IP             ; set to low priority
0000C2 0012           00419         return
                      00420 
0000C4                00421 T3_START 
0000C4 0E81           00422         movlw   T3CON_START
0000C6 6EB1           00423         movwf   T3CON
0000C8 0E00           00424         movlw   TMR3L_INIT
0000CA 6EB2           00425         movwf   TMR3L
0000CC 0E00           00426         movlw   TMR3H_INIT
0000CE 6EB3           00427         movwf   TMR3H
0000D0 929E           00428         bcf     PIR1,TMR3IF             ; clear interrupt flag
                      00429 ;       bsf     PIE1,TMR3IE             ; enable interrupts
                      00430 ;       bsf     IPR1,TMR3IP             ; set to high priority
0000D2 0012           00431         return
                      00432 
                      00433 
                      00434 ;******************************************************************************
                      00435 ; CMP_INIT - Initialize comparator and voltage references
                      00436 ; Note: Haven't built a START/STOP for this one yet.
                      00437 
0000D4                00438 CMP_INIT
                      00439 
  00000007            00440 CMCON_INIT      equ     b'00000111'     ; CM = 111 (comparators off)
  00000000            00441 CVRCON_INIT     equ     b'00000000'     ; disabled
                      00442 
0000D4 0E07           00443         movlw   CMCON_INIT
0000D6 6EB4           00444         movwf   CMCON
0000D8 0E00           00445         movlw   CVRCON_INIT
0000DA 6EB5           00446         movwf   CVRCON
0000DC 9CA1           00447         bcf     PIR2,CMIF               ; clear interrupt flag
                      00448 ;       bsf     PIE2,CMIE               ; enable interrupts
                      00449 ;       bsf     IPR2,CMIP               ; 1 = high priority
                      00450 
0000DE 0012           00451         return
                      00452 
                      00453 
                      00454 ;******************************************************************************
                      00455 ; CCP_INIT - Initialize all capture / compare / PWM modules
                      00456 ; Note: Haven't built a START/STOP for this one yet.
                      00457 
  00000000            00458 CCP1CON_INIT    equ     b'00000000'     ; CCP1M = 0000 (disabled, see pg 139)
  00000000            00459 CCP2CON_INIT    equ     b'00000000'     ; CCP2M = 0000 
MPASM  5.34                      D18F4520.ASM   5-22-2010  11:42:38         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00460 
0000E0                00461 CCP_INIT
                      00462         ; CCP1
0000E0 0E00           00463         movlw   CCP1CON_INIT
0000E2 6EBD           00464         movwf   CCP1CON
                      00465 
0000E4 949E           00466         bcf     PIR1,CCP1IF             ; clear interrupt flag
                      00467 ;       bsf     PIE1,CCP1IE             ; enable interrupts
                      00468 ;       bsf     IPR1,CCP1IP             ; 1 = high priority
                      00469 
                      00470         ; CCP2
0000E6 0E00           00471         movlw   CCP2CON_INIT
0000E8 6EBA           00472         movwf   CCP2CON
                      00473 
0000EA 90A1           00474         bcf     PIR2,CCP2IF             ; clear interrupt flag
                      00475 ;       bsf     PIE2,CCP2IE             ; enable interrupts
                      00476 ;       bsf     IPR2,CCP2IP             ; 1 = high priority
                      00477 
0000EC 0012           00478         return
                      00479 
                      00480 
                      00481 ;******************************************************************************
                      00482 ; MSSP_INIT - Initialises synchronous serial IO module (SSP, MSSP, BSSP) 
                      00483 ; Used for I2C communications. See MSSP documentation.
                      00484 
  00000000            00485 SSPSTAT_INIT    equ     b'00000000'     ; status register
                      00486 
  00000000            00487 SSPCON1_INIT    equ     b'00000000'     ; disable serial IO
  0000002F            00488 SSPCON1_START   equ     b'00101111'     ; SSPEN = 1 (enables serial modes)
                      00489                                         ; SSPM = 1111 (e.g. I2C slave mode...)
                      00490 
  00000000            00491 SSPCON2_INIT    equ     b'00000000'     ; used for I2C mode only
  00000000            00492 SSPCON2_START   equ     b'00000000'
                      00493 
0000EE                00494 MSSP_INIT       ; make sure port pins are setup before calling this routine
0000EE                00495 MSSP_STOP
0000EE 0E00           00496         movlw   SSPSTAT_INIT
0000F0 6EC7           00497         movwf   SSPSTAT
0000F2 0E00           00498         movlw   SSPCON1_INIT
0000F4 6EC6           00499         movwf   SSPCON1
0000F6 0E00           00500         movlw   SSPCON2_INIT
0000F8 6EC5           00501         movwf   SSPCON2
0000FA 0012           00502         return
                      00503 
0000FC                00504 MSSP_START
0000FC 0E00           00505         movlw   SSPSTAT_INIT
0000FE 6EC7           00506         movwf   SSPSTAT
000100 0E00           00507         movlw   SSPCON1_INIT
000102 6EC6           00508         movwf   SSPCON1
000104 0E00           00509         movlw   SSPCON2_INIT
000106 6EC5           00510         movwf   SSPCON2
                      00511 
                      00512         ;>>> Must set bits to input or output depending on I2C vs SSP,
MPASM  5.34                      D18F4520.ASM   5-22-2010  11:42:38         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00513         ;       master vs slave modes. For example:
000108 8694           00514         bsf     TRISC,3                 ; set to input for slave I2C clock in
00010A 8894           00515         bsf     TRISC,4                 ; set to input for slave I2C data in
                      00516 
00010C 969E           00517         bcf     PIR1,SSPIF              ; clear interrupt flag
                      00518 ;       bsf     PIE1,SSPIE              ; enable interrupts
                      00519 ;       bsf     IPR1,SSPIP              ; 1 = high priority
                      00520 
00010E 0012           00521         return
                      00522 
                      00523 
                      00524 ;******************************************************************************
                      00525 ; USART1_INIT  - Initialize USART
                      00526 ; USART1_STOP  - Stop USART
                      00527 ; USART1_START - Start USART with appropriate RX and TX interrupts
                      00528 ;
                      00529 ; Make sure ports are setup properly before calling this routine:
                      00530 ; Note: TXIF and RCIF are only cleared by hardware - firmware cannot clear them
                      00531 
  00000026            00532 TXSTA_INIT      equ     b'00100110'     ; xxxx | *TX9 | TXEN | *ASYNC | BRGH | TSR Empty
  000000A6            00533 TXSTA_START     equ     b'10100110'     ; xxxx | *TX9 | TXEN | *ASYNC | BRGH | TSR Empty
  00000010            00534 RCSTA_INIT      equ     b'00010000'     ; SPEN | *RX9 | xxxx | CREN
  00000090            00535 RCSTA_START     equ     b'10010000'     ; SPEN | *RX9 | xxxx | CREN
  00000000            00536 BAUDCON_INIT    equ     b'00000000'
  00000000            00537 SPBRGH_INIT     equ     .0
  00000000            00538 SPBRG_INIT      equ     .0
                      00539 
000110                00540 USART_INIT
000110                00541 USART_STOP
000110 0E26           00542         movlw   TXSTA_INIT
000112 6EAC           00543         movwf   TXSTA
000114 0E10           00544         movlw   RCSTA_INIT
000116 6EAB           00545         movwf   RCSTA
000118 0E00           00546         movlw   BAUDCON_INIT
00011A 6EB8           00547         movwf   BAUDCON
                      00548 
00011C 9A9E           00549         bcf     PIR1,RCIF               ; clear flags
00011E 9A9D           00550         bcf     PIE1,RCIE               ; disable receiver interrupts
000120 9A9F           00551         bcf     IPR1,RCIP               ; set to low priority
                      00552 
000122 989E           00553         bcf     PIR1,TXIF               ; clear flags
000124 989D           00554         bcf     PIE1,TXIE               ; disable transmitter interrupts
000126 989F           00555         bcf     IPR1,TXIP               ; set to low priority
000128 0012           00556         return
                      00557 
00012A                00558 USART_START                             ; start USART receiver & transmitter
00012A 0EA6           00559         movlw   TXSTA_START
00012C 6EAC           00560         movwf   TXSTA
00012E 0E90           00561         movlw   RCSTA_START
000130 6EAB           00562         movwf   RCSTA
000132 0E00           00563         movlw   BAUDCON_INIT
000134 6EB8           00564         movwf   BAUDCON
000136 0E00           00565         movlw   SPBRGH_INIT             ; set baudrate
MPASM  5.34                      D18F4520.ASM   5-22-2010  11:42:38         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000138 6EB0           00566         movwf   SPBRGH
00013A 0E00           00567         movlw   SPBRG_INIT
00013C 6EAF           00568         movwf   SPBRG
                      00569 
00013E 9A9E           00570         bcf     PIR1,RCIF               ; clear flags
000140 8A9D           00571         bsf     PIE1,RCIE               ; enable receiver interrupts
000142 9A9F           00572         bcf     IPR1,RCIP               ; set to low priority
                      00573 
000144 989E           00574         bcf     PIR1,TXIF               ; clear flags
000146 889D           00575         bsf     PIE1,TXIE               ; enable transmitter interrupts
000148 989F           00576         bcf     IPR1,TXIP               ; set to low priority
                      00577 
00014A 98AB           00578         bcf     RCSTA,CREN              ; clear and start RX
00014C 88AB           00579         bsf     RCSTA,CREN
00014E 0012           00580         return                          ; PIE and GIE must also be enabled
                      00581 
                      00582 ;USART_RESTART                          ; ISR-friendly restart
                      00583 ;       call    USART_START
                      00584 ;       goto    ISR_RX_EXIT
                      00585 
                      00586  
                      00587 ;******************************************************************************
                      00588 ; EE_INIT
                      00589 
  00000080            00590 EECON1_INIT     equ     b'10000000'     ; EEPGD = 1 (access flash)
                      00591 
000150                00592 EE_INIT 
000150 0E80           00593         movlw   EECON1_INIT
000152 6EA6           00594         movwf   EECON1
000154 0012           00595         return
                      00596   
                      00597 
                      00598         END                             ; directive 'end of program'
MPASM  5.34                      D18F4520.ASM   5-22-2010  11:42:38         PAGE 25


SYMBOL TABLE
  LABEL                             VALUE 

A                                 00000000
ABDEN                             00000000
ABDOVF                            00000007
ACCESS                            00000000
ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ACQT0                             00000003
ACQT1                             00000004
ACQT2                             00000005
ADCON0                            00000FC2
ADCON0_INIT                       00000000
ADCON0_START                      00000000
ADCON1                            00000FC1
ADCON1_INIT                       0000000F
ADCON1_START                      0000000F
ADCON2                            00000FC0
ADCON2_INIT                       00000000
ADCON2_START                      00000000
ADCS0                             00000000
ADCS1                             00000001
ADCS2                             00000002
ADDEN                             00000003
ADEN                              00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADIP                              00000006
ADON                              00000000
ADRES                             00000FC3
ADRESH                            00000FC4
ADRESL                            00000FC3
AD_INIT                           00000080
AD_START                          0000008E
AD_STOP                           00000080
AN10                              00000001
AN11                              00000004
AN12                              00000000
AN4                               00000005
AN8                               00000002
AN9                               00000003
APP_INCLUDE_FILE                  wClock.inc
ARG_HI_FLAG                       00000000
ARG_NUM_MAX                       00000000
B                                 00000001
BANKED                            00000001
BASE_OF_TABLES                    00002000
BAUDCON                           00000FB8
BAUDCON_INIT                      00000000
BAUDCTL                           00000FB8
BCLIE                             00000003
BCLIF                             00000003
BCLIP                             00000003
MPASM  5.34                      D18F4520.ASM   5-22-2010  11:42:38         PAGE 26


SYMBOL TABLE
  LABEL                             VALUE 

BF                                00000000
BGST                              00000005
BLU                               000000AB
BLU_OFFSET                        00000002
BOR                               00000000
BRG16                             00000003
BRGH                              00000002
BRT                               00000002
BRT_OFFSET                        00000002
BSR                               00000FE0
C                                 00000000
C1INV                             00000004
C1OUT                             00000006
C2INV                             00000005
C2OUT                             00000007
CCP1                              00000002
CCP1CON                           00000FBD
CCP1CON_INIT                      00000000
CCP1IE                            00000002
CCP1IF                            00000002
CCP1IP                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           00000FBA
CCP2CON_INIT                      00000000
CCP2IE                            00000000
CCP2IF                            00000000
CCP2IP                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCP2_PORTB                        00000003
CCP2_PORTC                        00000001
CCPR1                             00000FBE
CCPR1H                            00000FBF
CCPR1L                            00000FBE
CCPR2                             00000FBB
CCPR2H                            00000FBC
CCPR2L                            00000FBB
CCP_INIT                          000000E0
CFGS                              00000006
CHN_NUM_MAX                       00000015
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
MPASM  5.34                      D18F4520.ASM   5-22-2010  11:42:38         PAGE 27


SYMBOL TABLE
  LABEL                             VALUE 

CIS                               00000003
CK                                00000006
CKE                               00000006
CKP                               00000004
CKT_NUM_MAX                       0000001D
CKT_TABLE_INCREMENT               00000005
CKT_TABLE_LEN                     00000027
CLK_TIMER                         00000BDC
CM0                               00000000
CM1                               00000001
CM2                               00000002
CMCON                             00000FB4
CMCON_INIT                        00000007
CMIE                              00000006
CMIF                              00000006
CMIP                              00000006
CMP_INIT                          000000D4
CREN                              00000004
CS                                00000002
CSRC                              00000007
CUE_ARG                           00000002
CUE_CMD                           00000001
CUE_DONE                          00000000
CUE_JUMP                          00000005
CUE_LOOP                          00000003
CUE_LOOP_BLOCK                    00000004
CUE_MAX                           00000005
CUE_TABLES_START                  00002600
CVR0                              00000000
CVR1                              00000001
CVR2                              00000002
CVR3                              00000003
CVRCON                            00000FB5
CVRCON_INIT                       00000000
CVREN                             00000007
CVROE                             00000006
CVRR                              00000005
CVRSS                             00000004
CYCLE_START_FLAG                  00000001
CYN                               0000007F
D                                 00000005
DC                                00000001
DC1B0                             00000004
DC1B1                             00000005
DC2B0                             00000004
DC2B1                             00000005
DDRA                              TRISA
DDRB                              TRISB
DDRC                              TRISC
DDRD                              TRISD
DDRE                              TRISE
DEVTYPE                           00004420
DEV_FAMILY                        00000018
MPASM  5.34                      D18F4520.ASM   5-22-2010  11:42:38         PAGE 28


SYMBOL TABLE
  LABEL                             VALUE 

DEV_INCLUDE_FILE                  d18f4520.inc
DIAGNOSTICS_ENABLED               00000001
DIRTY_BIT                         00000000
DONE                              00000001
D_A                               00000005
ECCP1AS                           00000FB6
ECCPAS                            00000FB6
ECCPAS0                           00000004
ECCPAS1                           00000005
ECCPAS2                           00000006
ECCPASE                           00000007
EEADR                             00000FA9
EECON1                            00000FA6
EECON1_INIT                       00000080
EECON2                            00000FA7
EEDATA                            00000FA8
EEIE                              00000004
EEIF                              00000004
EEIP                              00000004
EEPGD                             00000007
EE_INIT                           00000150
EIGHT                             00000010
ELEVEN                            00000013
ERR_BAD_ARGNUM                    00000003
ERR_BAD_CHANNEL                   00000002
ERR_BAD_COMMAND                   00000001
ERR_BAD_OPCODE                    00000004
ERR_CMD_LOADER_FAILED             00000005
ERR_GET_COMMAND_FAILED            00000006
ERR_GET_NEXT_CMD_FAILED           00000007
ERR_NO_ERROR                      00000000
EXT_OFFSET                        00000003
FADE                              00000056
FADE_MAX                          00000059
FADE_MIN                          00000058
FADE_REPEAT                       00000057
FADE_X                            0000005A
FALSE                             00000000
FAST                              00000001
FDR_TABLE_LEN                     0000000D
FERR                              00000002
FIVE                              0000000D
FIVE_                             00000005
FLTS                              00000002
FOSC                              00000024
FOUR                              0000000C
FREE                              00000004
FSR0                              00000000
FSR0H                             00000FEA
FSR0L                             00000FE9
FSR1                              00000001
FSR1H                             00000FE2
FSR1L                             00000FE1
MPASM  5.34                      D18F4520.ASM   5-22-2010  11:42:38         PAGE 29


SYMBOL TABLE
  LABEL                             VALUE 

FSR2                              00000002
FSR2H                             00000FDA
FSR2L                             00000FD9
GCEN                              00000007
GIE                               00000007
GIEH                              00000007
GIEL                              00000006
GO                                00000001
GO_DONE                           00000001
GRN                               00000055
GRN_OFFSET                        00000001
HALF                              00000001
HLVDCON                           00000FD2
HLVDEN                            00000004
HLVDIE                            00000002
HLVDIF                            00000002
HLVDIP                            00000002
HLVDL0                            00000000
HLVDL1                            00000001
HLVDL2                            00000002
HLVDL3                            00000003
HSB_TABLES_LEN                    00000600
HSB_TABLES_START                  00002000
HUE                               00000000
HUE_OFFSET                        00000000
IBF                               00000007
IBOV                              00000005
ICD_ENABLED                       00000000
IDLEN                             00000007
INDF0                             00000FEF
INDF1                             00000FE7
INDF2                             00000FDF
INIT_PORTS_EXTERNAL               00000001
INIT_T0_EXTERNAL                  00000001
INIT_T1_EXTERNAL                  00000001
INIT_WATCHDOG_TIMER               00000001
INT0                              00000000
INT0E                             00000004
INT0F                             00000001
INT0IE                            00000004
INT0IF                            00000001
INT1                              00000001
INT1E                             00000003
INT1F                             00000000
INT1IE                            00000003
INT1IF                            00000000
INT1IP                            00000006
INT1P                             00000006
INT2                              00000002
INT2E                             00000004
INT2F                             00000001
INT2IE                            00000004
INT2IF                            00000001
MPASM  5.34                      D18F4520.ASM   5-22-2010  11:42:38         PAGE 30


SYMBOL TABLE
  LABEL                             VALUE 

INT2IP                            00000007
INT2P                             00000007
INTCON                            00000FF2
INTCON2                           00000FF1
INTCON3                           00000FF0
INTEDG0                           00000006
INTEDG1                           00000005
INTEDG2                           00000004
INTSRC                            00000007
IOFS                              00000002
IPEN                              00000007
IPR1                              00000F9F
IPR2                              00000FA2
IRCF0                             00000004
IRCF1                             00000005
IRCF2                             00000006
IRVST                             00000005
ITS                               00000000
IVRST                             00000005
KBI0                              00000004
KBI1                              00000005
KBI2                              00000006
KBI3                              00000007
LATA                              00000F89
LATA0                             00000000
LATA1                             00000001
LATA2                             00000002
LATA3                             00000003
LATA4                             00000004
LATA5                             00000005
LATA6                             00000006
LATA7                             00000007
LATB                              00000F8A
LATB0                             00000000
LATB1                             00000001
LATB2                             00000002
LATB3                             00000003
LATB4                             00000004
LATB5                             00000005
LATB6                             00000006
LATB7                             00000007
LATC                              00000F8B
LATC0                             00000000
LATC1                             00000001
LATC2                             00000002
LATC3                             00000003
LATC4                             00000004
LATC5                             00000005
LATC6                             00000006
LATC7                             00000007
LATD                              00000F8C
LATD0                             00000000
LATD1                             00000001
MPASM  5.34                      D18F4520.ASM   5-22-2010  11:42:38         PAGE 31


SYMBOL TABLE
  LABEL                             VALUE 

LATD2                             00000002
LATD3                             00000003
LATD4                             00000004
LATD5                             00000005
LATD6                             00000006
LATD7                             00000007
LATE                              00000F8D
LATE0                             00000000
LATE1                             00000001
LATE2                             00000002
LED_INCLUDE_FILE                  led.inc
LVDCON                            00000FD2
LVDEN                             00000004
LVDIE                             00000002
LVDIF                             00000002
LVDIN                             00000005
LVDIP                             00000002
LVDL0                             00000000
LVDL1                             00000001
LVDL2                             00000002
LVDL3                             00000003
LVV0                              00000000
LVV1                              00000001
LVV2                              00000002
LVV3                              00000003
MAG                               000000D5
MASTER_INIT                       00000000
MAXRAM                            000002FF
MINUTES                           00000006
MONOCHROME_MODE                   00000001
MSSP_INIT                         000000EE
MSSP_START                        000000FC
MSSP_STOP                         000000EE
N                                 00000004
NEVER                             000000FE
NINE                              00000011
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BOR                           00000000
NOT_CS                            00000002
NOT_DONE                          00000001
NOT_PD                            00000002
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RD                            00000000
NOT_RI                            00000004
NOT_SS                            00000005
NOT_T1SYNC                        00000002
NOT_T3SYNC                        00000002
NOT_TO                            00000003
NOT_W                             00000002
NOT_WR                            00000001
NOT_WRITE                         00000002
MPASM  5.34                      D18F4520.ASM   5-22-2010  11:42:38         PAGE 32


SYMBOL TABLE
  LABEL                             VALUE 

NOW                               000000FF
OBF                               00000006
OCLOCK                            00000015
OERR                              00000001
OFF                               00000000
ON                                00000001
ONE                               00000009
OP_ADD                            0000000B
OP_ADD_AND                        0000000C
OP_ADD_AND_SAVE                   0000000D
OP_ADD_IND                        0000000E
OP_ADD_IND_AND                    00000010
OP_ADD_IND_AND_SAVE               00000011
OP_ADD_IND_SAVE                   0000000F
OP_DEC                            00000006
OP_DECX2_RANGE                    00000008
OP_DECX3_RANGE                    00000009
OP_DECX4_RANGE                    0000000A
OP_DEC_RANGE                      00000007
OP_INC                            00000001
OP_INCX2_RANGE                    00000003
OP_INCX3_RANGE                    00000004
OP_INCX4_RANGE                    00000005
OP_INC_RANGE                      00000002
OP_LIT                            00000000
OP_OPCODE_MAX                     0000001A
OP_RAND                           00000019
OP_RAND_RANGE                     0000001A
OP_SUB                            00000012
OP_SUB_AND                        00000013
OP_SUB_AND_SAVE                   00000014
OP_SUB_IND                        00000015
OP_SUB_IND_AND                    00000017
OP_SUB_IND_AND_SAVE               00000018
OP_SUB_IND_SAVE                   00000016
ORN                               00000015
OSCCON                            00000FD3
OSCCON_INIT                       00000070
OSCFIE                            00000007
OSCFIF                            00000007
OSCFIP                            00000007
OSCTUNE                           00000F9B
OSCTUNE_INIT                      0000005F
OSC_INIT                          00000054
OSTS                              00000003
OV                                00000003
P                                 00000004
P1B                               00000005
P1C                               00000006
P1D                               00000007
P1M0                              00000006
P1M1                              00000007
PAST                              00000007
MPASM  5.34                      D18F4520.ASM   5-22-2010  11:42:38         PAGE 33


SYMBOL TABLE
  LABEL                             VALUE 

PATCH                             00000041
PC                                00000FF9
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000FF9
PCLATH                            00000FFA
PCLATU                            00000FFB
PD                                00000002
PDC0                              00000000
PDC1                              00000001
PDC2                              00000002
PDC3                              00000003
PDC4                              00000004
PDC5                              00000005
PDC6                              00000006
PEIE                              00000006
PEN                               00000002
PGC                               00000006
PGD                               00000007
PGM                               00000005
PIE1                              00000F9D
PIE2                              00000FA0
PIR1                              00000F9E
PIR2                              00000FA1
PLAYLIST_CODA                     00000001
PLAYLIST_DONE                     00000000
PLLEN                             00000006
PLUSW0                            00000FEB
PLUSW1                            00000FE3
PLUSW2                            00000FDB
POR                               00000001
PORTA                             00000F80
PORTB                             00000F81
PORTC                             00000F82
PORTD                             00000F83
PORTE                             00000F84
PORT_INIT                         00000000
POSTDEC0                          00000FED
POSTDEC1                          00000FE5
POSTDEC2                          00000FDD
POSTINC0                          00000FEE
POSTINC1                          00000FE6
POSTINC2                          00000FDE
PR2                               00000FCB
PR2_INIT                          00000000
PREINC0                           00000FEC
PREINC1                           00000FE4
PREINC2                           00000FDC
PROD                              00000FF3
PRODH                             00000FF4
PRODL                             00000FF3
MPASM  5.34                      D18F4520.ASM   5-22-2010  11:42:38         PAGE 34


SYMBOL TABLE
  LABEL                             VALUE 

PRSEN                             00000007
PSA                               00000003
PSP0                              00000000
PSP1                              00000001
PSP2                              00000002
PSP3                              00000003
PSP4                              00000004
PSP5                              00000005
PSP6                              00000006
PSP7                              00000007
PSPIE                             00000007
PSPIF                             00000007
PSPIP                             00000007
PSPMODE                           00000004
PSSAC0                            00000002
PSSAC1                            00000003
PSSBD0                            00000000
PSSBD1                            00000001
PWM1CON                           00000FB7
QUARTER                           00000003
R                                 00000002
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RA6                               00000006
RA7                               00000007
RAM_INIT                          0000006A
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RBIP                              00000000
RBPU                              00000007
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RCEN                              00000003
RCIDL                             00000006
RCIE                              00000005
MPASM  5.34                      D18F4520.ASM   5-22-2010  11:42:38         PAGE 35


SYMBOL TABLE
  LABEL                             VALUE 

RCIF                              00000005
RCIP                              00000005
RCMT                              00000006
RCON                              00000FD0
RCON_INIT                         00000080
RCREG                             00000FAE
RCSTA                             00000FAB
RCSTA_INIT                        00000010
RCSTA_START                       00000090
RD                                00000000
RD0                               00000000
RD1                               00000001
RD16                              00000007
RD2                               00000002
RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
RE3                               00000003
RED                               00000000
RED_OFFSET                        00000000
RESET_INIT                        0000003C
RI                                00000004
RSEN                              00000001
RT_0                              0000006E
RX                                00000007
RX9                               00000006
RX9D                              00000000
RXDTP                             00000005
RX_ENABLED                        00000000
R_W                               00000002
S                                 00000003
SAT                               00000001
SAT_OFFSET                        00000001
SBOREN                            00000006
SCK                               00000003
SCKP                              00000004
SCL                               00000003
SCS0                              00000000
SCS1                              00000001
SDA                               00000004
SDI                               00000004
SDO                               00000005
SECOND_FLAG                       00000003
SEN                               00000000
SENDB                             00000003
SET_BRT                           00000011
SET_HSB                           00000023
SET_RGB                           00000033
MPASM  5.34                      D18F4520.ASM   5-22-2010  11:42:38         PAGE 36


SYMBOL TABLE
  LABEL                             VALUE 

SEVEN                             0000000F
SIX                               0000000E
SMP                               00000007
SP0                               00000000
SP1                               00000001
SP2                               00000002
SP3                               00000003
SP4                               00000004
SPBRG                             00000FAF
SPBRGH                            00000FB0
SPBRGH_INIT                       00000000
SPBRG_INIT                        00000000
SPEN                              00000007
SREN                              00000005
SS                                00000005
SSPADD                            00000FC8
SSPBUF                            00000FC9
SSPCON1                           00000FC6
SSPCON1_INIT                      00000000
SSPCON1_START                     0000002F
SSPCON2                           00000FC5
SSPCON2_INIT                      00000000
SSPCON2_START                     00000000
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPIP                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000FC7
SSPSTAT_INIT                      00000000
STATUS                            00000FD8
STKFUL                            00000007
STKOVF                            00000007
STKPTR                            00000FFC
STKUNF                            00000006
SWDTE                             00000000
SWDTEN                            00000000
SWITCH_READ_FLAG                  00000002
SW_DEBOUNCE_MAX                   00000008
SW_HELD_COUNT                     0000003C
SW_STATE_FALLING_bp               00000002
SW_STATE_ON_bp                    00000000
SW_STATE_RISING_bp                00000001
SYNC                              00000004
T016BIT                           00000006
T08BIT                            00000006
T0CKI                             00000004
T0CON                             00000FD5
T0CS                              00000005
MPASM  5.34                      D18F4520.ASM   5-22-2010  11:42:38         PAGE 37


SYMBOL TABLE
  LABEL                             VALUE 

T0IE                              00000005
T0IF                              00000002
T0PS0                             00000000
T0PS1                             00000001
T0PS2                             00000002
T0PS3                             00000003
T0SE                              00000004
T0_INIT                           00000000
T0_START                          00000000
T0_STOP                           00000000
T13CKI                            00000000
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000FCD
T1OSCEN                           00000003
T1OSI                             00000001
T1OSO                             00000000
T1RUN                             00000006
T1SYNC                            00000002
T1_INIT                           00000000
T1_START                          00000000
T1_STOP                           00000000
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000FCA
T2CON_INIT                        00000000
T2CON_START                       00000004
T2OUTPS0                          00000003
T2OUTPS1                          00000004
T2OUTPS2                          00000005
T2OUTPS3                          00000006
T2_INIT                           0000009C
T2_START                          000000A8
T2_STOP                           0000009C
T3CCP1                            00000003
T3CCP2                            00000006
T3CKPS0                           00000004
T3CKPS1                           00000005
T3CON                             00000FB1
T3CON_INIT                        00000080
T3CON_START                       00000081
T3SYNC                            00000002
T3_INIT                           000000B8
T3_START                          000000C4
T3_STOP                           000000B8
TABLAT                            00000FF5
TBLPTR                            00000FF6
TBLPTRH                           00000FF7
TBLPTRL                           00000FF6
TBLPTRU                           00000FF8
TEN                               00000012
TEN_                              00000002
THREE                             0000000B
MPASM  5.34                      D18F4520.ASM   5-22-2010  11:42:38         PAGE 38


SYMBOL TABLE
  LABEL                             VALUE 

TMR0H                             00000FD7
TMR0IE                            00000005
TMR0IF                            00000002
TMR0IP                            00000002
TMR0L                             00000FD6
TMR0ON                            00000007
TMR1CS                            00000001
TMR1H                             00000FCF
TMR1IE                            00000000
TMR1IF                            00000000
TMR1IP                            00000000
TMR1L                             00000FCE
TMR1ON                            00000000
TMR2                              00000FCC
TMR2IE                            00000001
TMR2IF                            00000001
TMR2IP                            00000001
TMR2ON                            00000002
TMR2_INIT                         00000000
TMR3CS                            00000001
TMR3H                             00000FB3
TMR3H_INIT                        00000000
TMR3IE                            00000001
TMR3IF                            00000001
TMR3IP                            00000001
TMR3L                             00000FB2
TMR3L_INIT                        00000000
TMR3ON                            00000000
TO                                00000003
TOS                               00000FFD
TOSH                              00000FFE
TOSL                              00000FFD
TOSU                              00000FFF
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TO_                               00000008
TRISA                             00000F92
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISA6                            00000006
TRISA7                            00000007
TRISB                             00000F93
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
MPASM  5.34                      D18F4520.ASM   5-22-2010  11:42:38         PAGE 39


SYMBOL TABLE
  LABEL                             VALUE 

TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000F94
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000F95
TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000F96
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRMT                              00000001
TRUE                              00000001
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TWELVE                            00000014
TWENTY                            00000004
TWO                               0000000A
TX                                00000006
TX9                               00000006
TX9D                              00000000
TXCKP                             00000004
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXIP                              00000004
TXREG                             00000FAD
TXSTA                             00000FAC
TXSTA_INIT                        00000026
TXSTA_START                       000000A6
UA                                00000001
UNITS_ENABLED                     00000001
USART_INIT                        00000110
USART_START                       0000012A
USART_STOP                        00000110
VCFG0                             00000004
MPASM  5.34                      D18F4520.ASM   5-22-2010  11:42:38         PAGE 40


SYMBOL TABLE
  LABEL                             VALUE 

VCFG1                             00000005
VDIRMAG                           00000007
VIO                               000000D5
W                                 00000000
WATCH                             00000060
WCOL                              00000007
WDTCON                            00000FD1
WDTCON_INIT                       00000000
WDTCON_START                      00000001
WDT_INIT                          0000005E
WDT_START                         00000064
WDT_STOP                          0000005E
WR                                00000001
WREG                              00000FE8
WREN                              00000002
WRERR                             00000003
WUE                               00000001
YEL                               0000002A
Z                                 00000002
_BOREN_NOSLP_2L                   000000FD
_BOREN_OFF_2L                     000000F9
_BOREN_ON_2L                      000000FB
_BOREN_SBORDIS_2L                 000000FF
_BORV_0_2L                        000000E7
_BORV_1_2L                        000000EF
_BORV_2_2L                        000000F7
_BORV_3_2L                        000000FF
_CCP2MX_PORTBE_3H                 000000FE
_CCP2MX_PORTC_3H                  000000FF
_CONFIG1H                         00300001
_CONFIG2H                         00300003
_CONFIG2L                         00300002
_CONFIG3H                         00300005
_CONFIG4L                         00300006
_CONFIG5H                         00300009
_CONFIG5L                         00300008
_CONFIG6H                         0030000B
_CONFIG6L                         0030000A
_CONFIG7H                         0030000D
_CONFIG7L                         0030000C
_CP0_OFF_5L                       000000FF
_CP0_ON_5L                        000000FE
_CP1_OFF_5L                       000000FF
_CP1_ON_5L                        000000FD
_CPB_OFF_5H                       000000FF
_CPB_ON_5H                        000000BF
_CPD_OFF_5H                       000000FF
_CPD_ON_5H                        0000007F
_DEBUG_OFF_4L                     000000FF
_DEBUG_ON_4L                      0000007F
_DEVID1                           003FFFFE
_DEVID2                           003FFFFF
_EBTR0_OFF_7L                     000000FF
MPASM  5.34                      D18F4520.ASM   5-22-2010  11:42:38         PAGE 41


SYMBOL TABLE
  LABEL                             VALUE 

_EBTR0_ON_7L                      000000FE
_EBTR1_OFF_7L                     000000FF
_EBTR1_ON_7L                      000000FD
_EBTRB_OFF_7H                     000000FF
_EBTRB_ON_7H                      000000BF
_FCMEN_OFF_1H                     000000BF
_FCMEN_ON_1H                      000000FF
_IDLOC0                           00200000
_IDLOC1                           00200001
_IDLOC2                           00200002
_IDLOC3                           00200003
_IDLOC4                           00200004
_IDLOC5                           00200005
_IDLOC6                           00200006
_IDLOC7                           00200007
_IESO_OFF_1H                      0000007F
_IESO_ON_1H                       000000FF
_LPT1OSC_OFF_3H                   000000FB
_LPT1OSC_ON_3H                    000000FF
_LVP_OFF_4L                       000000FB
_LVP_ON_4L                        000000FF
_MCLRE_OFF_3H                     0000007F
_MCLRE_ON_3H                      000000FF
_OSC_ECIO6_1H                     000000F5
_OSC_EC_1H                        000000F4
_OSC_HSPLL_1H                     000000F6
_OSC_HS_1H                        000000F2
_OSC_INTIO67_1H                   000000F8
_OSC_INTIO7_1H                    000000F9
_OSC_LP_1H                        000000F0
_OSC_RCIO6_1H                     000000F7
_OSC_RC_1H                        000000F3
_OSC_XT_1H                        000000F1
_PBADEN_OFF_3H                    000000FD
_PBADEN_ON_3H                     000000FF
_PWRT_OFF_2L                      000000FF
_PWRT_ON_2L                       000000FE
_STVREN_OFF_4L                    000000FE
_STVREN_ON_4L                     000000FF
_WDTPS_1024_2H                    000000F5
_WDTPS_128_2H                     000000EF
_WDTPS_16384_2H                   000000FD
_WDTPS_16_2H                      000000E9
_WDTPS_1_2H                       000000E1
_WDTPS_2048_2H                    000000F7
_WDTPS_256_2H                     000000F1
_WDTPS_2_2H                       000000E3
_WDTPS_32768_2H                   000000FF
_WDTPS_32_2H                      000000EB
_WDTPS_4096_2H                    000000F9
_WDTPS_4_2H                       000000E5
_WDTPS_512_2H                     000000F3
_WDTPS_64_2H                      000000ED
MPASM  5.34                      D18F4520.ASM   5-22-2010  11:42:38         PAGE 42


SYMBOL TABLE
  LABEL                             VALUE 

_WDTPS_8192_2H                    000000FB
_WDTPS_8_2H                       000000E7
_WDT_OFF_2H                       000000FE
_WDT_ON_2H                        000000FF
_WRT0_OFF_6L                      000000FF
_WRT0_ON_6L                       000000FE
_WRT1_OFF_6L                      000000FF
_WRT1_ON_6L                       000000FD
_WRTB_OFF_6H                      000000FF
_WRTB_ON_6H                       000000BF
_WRTC_OFF_6H                      000000FF
_WRTC_ON_6H                       000000DF
_WRTD_OFF_6H                      000000FF
_WRTD_ON_6H                       0000007F
_XINST_OFF_4L                     000000BF
_XINST_ON_4L                      000000FF
__18F4420                         00000001
c00                               00000000
c01                               00000004
c02                               00000008
c03                               0000000C
c04                               00000010
c05                               00000014
c06                               00000018
c07                               0000001C
c08                               00000020
c09                               00000024
c10                               00000028
c11                               0000002C
c12                               00000030
c13                               00000034
c14                               00000038
c15                               0000003C
c16                               00000040
c17                               00000044
c18                               00000048
c19                               0000004C
c20                               00000050
c21                               00000054
c22                               00000058
c23                               0000005C
c24                               00000060
c25                               00000064
c26                               00000068
c27                               0000006C
c28                               00000070
c29                               00000074
c30                               00000078
c31                               0000007C
c32                               00000080
c33                               00000084
c34                               00000088
c35                               0000008C
MPASM  5.34                      D18F4520.ASM   5-22-2010  11:42:38         PAGE 43


SYMBOL TABLE
  LABEL                             VALUE 

c36                               00000090
c37                               00000094
c38                               00000098
c39                               0000009C
c40                               000000A0
c41                               000000A4
c42                               000000A8
c43                               000000AC
c44                               000000B0
c45                               000000B4
c46                               000000B8
c47                               000000BC
c48                               000000C0
c49                               000000C4
c50                               000000C8
c51                               000000CC
c52                               000000D0
c53                               000000D4
c54                               000000D8
c55                               000000DC
c56                               000000E0
c57                               000000E4
c58                               000000E8
c59                               000000EC
c60                               000000F0
c61                               000000F4
c62                               000000F8
c63                               000000FC
setptr                            
switch                            
switch01b                         00000000
switch01p                         00000F80
tbladdr                           
tblindx                           
tblread                           

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

